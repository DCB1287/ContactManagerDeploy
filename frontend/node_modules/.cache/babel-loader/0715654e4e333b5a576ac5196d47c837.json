{"ast":null,"code":"import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isForwardRef } from 'react-is';\nimport RefFindNode from './RefFindNode';\nimport RefForward from './RefForward';\n/**\r\n * This component exposes a prop that supports functional and createRef() API and returns the DOM\r\n * node of both functional and class component children.\r\n */\n\nfunction Ref(props) {\n  var children = props.children,\n      innerRef = props.innerRef;\n  var child = React.Children.only(children);\n  var ElementType = isForwardRef(child) ? RefForward : RefFindNode;\n  return React.createElement(ElementType, {\n    innerRef: innerRef\n  }, child);\n}\n\nRef.handledProps = [\"children\", \"innerRef\"];\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /** Primary content. */\n  children: PropTypes.element.isRequired,\n\n  /**\r\n   * Called when a child component will be mounted or updated.\r\n   *\r\n   * @param {HTMLElement} node - Referred node.\r\n   */\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n} : {};\nRef.FindNode = RefFindNode;\nRef.Forward = RefForward;\nexport default Ref;","map":{"version":3,"sources":["C:/Users/David/Documents/GitHub/ContactManager/frontend/node_modules/semantic-ui-react/dist/es/addons/Ref/Ref.js"],"names":["PropTypes","React","isForwardRef","RefFindNode","RefForward","Ref","props","children","innerRef","child","Children","only","ElementType","createElement","handledProps","propTypes","process","env","NODE_ENV","element","isRequired","oneOfType","func","object","FindNode","Forward"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,YAAT,QAA6B,UAA7B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA;;;;;AAKA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAClB,MAAIC,QAAQ,GAAGD,KAAK,CAACC,QAArB;AAAA,MACIC,QAAQ,GAAGF,KAAK,CAACE,QADrB;AAEA,MAAIC,KAAK,GAAGR,KAAK,CAACS,QAAN,CAAeC,IAAf,CAAoBJ,QAApB,CAAZ;AACA,MAAIK,WAAW,GAAGV,YAAY,CAACO,KAAD,CAAZ,GAAsBL,UAAtB,GAAmCD,WAArD;AACA,SAAOF,KAAK,CAACY,aAAN,CAAoBD,WAApB,EAAiC;AACtCJ,IAAAA,QAAQ,EAAEA;AAD4B,GAAjC,EAEJC,KAFI,CAAP;AAGD;;AAEDJ,GAAG,CAACS,YAAJ,GAAmB,CAAC,UAAD,EAAa,UAAb,CAAnB;AACAT,GAAG,CAACU,SAAJ,GAAgBC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,GAAwC;AACtD;AACAX,EAAAA,QAAQ,EAAEP,SAAS,CAACmB,OAAV,CAAkBC,UAF0B;;AAItD;;;;;AAKAZ,EAAAA,QAAQ,EAAER,SAAS,CAACqB,SAAV,CAAoB,CAACrB,SAAS,CAACsB,IAAX,EAAiBtB,SAAS,CAACuB,MAA3B,CAApB;AAT4C,CAAxC,GAUZ,EAVJ;AAWAlB,GAAG,CAACmB,QAAJ,GAAerB,WAAf;AACAE,GAAG,CAACoB,OAAJ,GAAcrB,UAAd;AACA,eAAeC,GAAf","sourcesContent":["import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport { isForwardRef } from 'react-is';\r\nimport RefFindNode from './RefFindNode';\r\nimport RefForward from './RefForward';\r\n/**\r\n * This component exposes a prop that supports functional and createRef() API and returns the DOM\r\n * node of both functional and class component children.\r\n */\r\n\r\nfunction Ref(props) {\r\n  var children = props.children,\r\n      innerRef = props.innerRef;\r\n  var child = React.Children.only(children);\r\n  var ElementType = isForwardRef(child) ? RefForward : RefFindNode;\r\n  return React.createElement(ElementType, {\r\n    innerRef: innerRef\r\n  }, child);\r\n}\r\n\r\nRef.handledProps = [\"children\", \"innerRef\"];\r\nRef.propTypes = process.env.NODE_ENV !== \"production\" ? {\r\n  /** Primary content. */\r\n  children: PropTypes.element.isRequired,\r\n\r\n  /**\r\n   * Called when a child component will be mounted or updated.\r\n   *\r\n   * @param {HTMLElement} node - Referred node.\r\n   */\r\n  innerRef: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\r\n} : {};\r\nRef.FindNode = RefFindNode;\r\nRef.Forward = RefForward;\r\nexport default Ref;"]},"metadata":{},"sourceType":"module"}